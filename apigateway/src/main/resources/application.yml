server:
  port: 8087  # API Gateway runs on port 8087

spring:
  main:
    web-application-type: reactive  # Using Spring WebFlux (Reactive)
  application:
    name: api-gateway  # Naming the application
  cloud:
    gateway:
      routes:
        - id: CandidatService
          uri: http://localhost:8081
          predicates:
            - Path=/candidat/**
        - id: TestService
          uri: http://localhost:8080
          predicates:
            - Path=/tests/**
        - id: LevelService
          uri: http://localhost:8083
          predicates:
            - Path=/level/**
        - id: RoleService
          uri: http://localhost:8082
          predicates:
            - Path=/role/**
        - id: ThemeService
          uri: http://localhost:8085
          predicates:
            - Path=/theme/**
        - id: ScoreService
          uri: http://localhost:8086
          predicates:
            - Path=/score/**
        - id: AuthService
          uri: http://localhost:8088
          predicates:
            - Path=/api/**
        - id: CompetenceService
          uri: http://localhost:8089
          predicates:
            - Path=/competences/**
        - id: QuestionService
          uri: http://localhost:8090
          predicates:
            - Path=/question/**
        - id: AnswerService
          uri: http://localhost:8091
          predicates:
            - Path=/answer/**

management:
  endpoints:
    web:
      exposure:
        include: "*"  # Restrict exposure for security
  endpoint:
    health:
      show-details: always  # Show details in health check
  metrics:
    enabled: true  # Enable metrics for monitoring
  health:
    livenessstate:
      enabled: true  # Liveness probe
    readinessstate:
      enabled: true  # Readiness probe
  server:
    port: 8099  # Actuator runs on a separate port
